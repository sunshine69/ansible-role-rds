- name: Get the hosted zone infor
  route53_facts:
    dns_name: "{{ tld_name_internal }}"
    query: hosted_zone
    hosted_zone_method: list_by_name
    profile: "{{ profile|default(omit) }}"
  register: hosted_zone_out

- set_fact:
    hosted_zone_id: "{{ hosted_zone_out.HostedZones.0.Id.split('/')[2] }}"

- name: Get the record set info
  route53_facts:
    profile: "{{ profile|default(omit) }}"
    query: record_sets
    hosted_zone_id: "{{ hosted_zone_id }}"
    start_record_name: "{{ rds_internal_dns }}"
    max_items: 1
  register: record_set_out

- name: Remove Route 53 internal rds master record entry for {{ role_type }}
  route53:
    profile: "{{ profile|default(omit) }}"
    private_zone: true
    state: absent
    zone: "{{ tld_name_internal }}"
    record: "{{ rds_internal_dns }}"
    value: "{{ record_set_out.ResourceRecordSets.0.ResourceRecords.0.Value }}"
    type: "{{ record_set_out.ResourceRecordSets.0.Type }}"
    retry_interval: 5

- name: Get RDS facts
  rds_instance_facts:
    region: "{{ region }}"
    profile: "{{ profile|default(omit) }}"
    name: "{{ item.db_instance_identifier }}"
  with_items: "{{ rds_db_instances }}"
  when: "db_instance_type  == 'master'"
  register: rds_facts

- debug:
    var: rds_facts
    verbosity: 2

- name: Remove the {{ role_type }}-{{ db_instance_type }} RDS instance
  rds_instance:
    region: "{{ region }}"
    profile: "{{ profile|default(omit) }}"
    db_instance_identifier: "{{ item.db_instance_identifier }}"
    wait: "{{ item.wait }}"
    wait_timeout: "{{ item.wait_timeout }}"
    state: absent
  with_items: "{{ rds_db_instances }}"
  when: "db_instance_type  == 'master'"

- name: Identify snapshots to remove
  rds_snapshot_facts:
    region: "{{ region }}"
    profile: "{{ profile|default(omit) }}"

- name: remove the parameter groups
  rds_param_group:
    region: "{{ region }}"
    profile: "{{ profile|default(omit) }}"
    name: "{{ rds_parameter_group.name }}"
    state: absent

- name: Remove the rds_subnet_group
  rds_subnet_group:
    region: "{{ region }}"
    profile: "{{ profile|default(omit) }}"
    name: "{{ rds_subnet_group.name }}"
    state: absent

# AWS refused to delete even nothing holds it - Service: AmazonRDS; Status
# Code: 400; Error Code: InvalidOptionGroupStateFault - thus temporary put
# ignore_errors here
- name: remove the option groups
  rds_option_group:
    region: "{{ region }}"
    profile: "{{ profile|default(omit) }}"
    option_group_name: "{{ rds_option_group.name }}"
    apply_immediately: "{{ rds_option_group.apply_immediately }}"
    state: absent
  ignore_errors: yes
